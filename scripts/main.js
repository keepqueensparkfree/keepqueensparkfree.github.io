var qp;!function(t){!function(t){"use strict";function n(){$(".have-your-say").on("click",function(){c("section.contact")})}function o(){var t=a.header.cloneNode(!0),n=a.container.offsetTop;t.classList.add("shorthand"),document.body.appendChild(t),window.addEventListener("scroll",function(){var t=document.body.scrollTop;n<t&&!document.body.classList.contains("sticky")?document.body.classList.add("sticky"):n>=t&&document.body.classList.remove("sticky")})}function e(){for(var t=document.querySelectorAll('a[rel="external"]'),n=0;n<t.length;n++)t[n].setAttribute("target","_blank")}function c(t,n,o){void 0===n&&(n=0),t="string"==typeof t?$(t):t,"transparent"!==$("header.shorthand").css("background")&&(n-=50);var e=$("body"),c=$(t).offset().top+(n||0);e.stop().animate({scrollTop:c},400,function(){void 0!==o&&o()})}var a={header:document.querySelector("header"),container:document.querySelector(".content")};!function(){o(),e(),n()}()}(t.main||(t.main={}))}(qp||(qp={}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMvbWFpbi50cyJdLCJuYW1lcyI6WyJxcCIsIm1haW4iLCJpbml0TmF2TGlua3MiLCIkIiwib24iLCJzY3JvbGxUb1RhcmdldCIsInN0aWNreUhlYWRlciIsInNob3J0aGFuZCIsImVsZW1lbnRzIiwiaGVhZGVyIiwiY2xvbmVOb2RlIiwiY29udGFpbmVyT2Zmc2V0IiwiY29udGFpbmVyIiwib2Zmc2V0VG9wIiwiY2xhc3NMaXN0IiwiYWRkIiwiZG9jdW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwic2Nyb2xsVG9wIiwiY29udGFpbnMiLCJyZW1vdmUiLCJleHRlcm5hbExpbmtzIiwibGlua3MiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaSIsImxlbmd0aCIsInNldEF0dHJpYnV0ZSIsInRhcmdldCIsIm9mZnNldCIsImNhbGxiYWNrIiwiY3NzIiwic2Nyb2xsYWJsZSIsInBvc2l0aW9uIiwidG9wIiwic3RvcCIsImFuaW1hdGUiLCJ1bmRlZmluZWQiLCJxdWVyeVNlbGVjdG9yIl0sIm1hcHBpbmdzIjoiQUFLQSxHQUFPQSxLQUFQLFNBQU9BLElBQUcsU0FBQUMsR0FDVCxZQTZDQSxTQUFBQyxLQUNDQyxFQUFFLGtCQUFrQkMsR0FBRyxRQUFTLFdBQy9CQyxFQUFlLHFCQVFqQixRQUFBQyxLQUNDLEdBQU1DLEdBQXlCQyxFQUFTQyxPQUFPQyxXQUFVLEdBQ25EQyxFQUFrQkgsRUFBU0ksVUFBVUMsU0FHM0NOLEdBQVVPLFVBQVVDLElBQUksYUFDeEJDLFNBQVNDLEtBQUtDLFlBQVlYLEdBRTFCWSxPQUFPQyxpQkFBaUIsU0FBVSxXQUNqQyxHQUFNQyxHQUFZTCxTQUFTQyxLQUFLSSxTQUU1QlYsR0FBa0JVLElBQWNMLFNBQVNDLEtBQUtILFVBQVVRLFNBQVMsVUFDcEVOLFNBQVNDLEtBQUtILFVBQVVDLElBQUksVUFDbEJKLEdBQW1CVSxHQUM3QkwsU0FBU0MsS0FBS0gsVUFBVVMsT0FBTyxZQVNsQyxRQUFBQyxLQUdDLElBQUssR0FGQ0MsR0FBUVQsU0FBU1UsaUJBQWlCLHFCQUUvQkMsRUFBSSxFQUFHQSxFQUFJRixFQUFNRyxPQUFRRCxJQUNqQ0YsRUFBTUUsR0FBR0UsYUFBYSxTQUFVLFVBU2xDLFFBQUF4QixHQUF3QnlCLEVBQVFDLEVBQVlDLE9BQVosS0FBQUQsSUFBQUEsRUFBQSxHQUMvQkQsRUFBNEIsZ0JBQVhBLEdBQXVCM0IsRUFBRTJCLEdBQVVBLEVBR0osZ0JBQTVDM0IsRUFBRSxvQkFBb0I4QixJQUFJLGdCQUM3QkYsR0FBVSxHQUdYLElBQU1HLEdBQWEvQixFQUFFLFFBQ2ZnQyxFQUFXaEMsRUFBRTJCLEdBQVFDLFNBQVNLLEtBQU9MLEdBQVUsRUFFckRHLEdBQVdHLE9BQU9DLFNBQVVqQixVQUFXYyxHQUFZLElBQUssZUFDdENJLEtBQWJQLEdBQ0hBLE1BdEdILEdBQU14QixJQUNMQyxPQUFRTyxTQUFTd0IsY0FBYyxVQUMvQjVCLFVBQVdJLFNBQVN3QixjQUFjLGNBT25DLFdBQ0NsQyxJQUNBa0IsSUFDQXRCLFFBZlFGLEVBQUFDLE9BQUFELEVBQUFDLFdBQUhELEtBQUFBIiwiZmlsZSI6InNjcmlwdHMvbWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCJ2ZW5kb3IvanF1ZXJ5L2pxdWVyeS5kLnRzXCIgLz5cblxuLyoqXG4gKiBNYWluIG1vZHVsZVxuICovXG5tb2R1bGUgcXAubWFpbiB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHRjb25zdCBlbGVtZW50cyA9IHtcblx0XHRoZWFkZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2hlYWRlcicpLFxuXHRcdGNvbnRhaW5lcjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKSBhcyBIVE1MRWxlbWVudFxuXHR9O1xuXG5cblx0LyoqXG5cdCAqIEluaXRpYWxpemF0aW9uXG5cdCAqL1xuXHRmdW5jdGlvbiBpbml0KCkge1xuXHRcdHN0aWNreUhlYWRlcigpO1xuXHRcdGV4dGVybmFsTGlua3MoKTtcblx0XHRpbml0TmF2TGlua3MoKTtcblx0XHQvL2luaXRNb2RhbExpbmtzKCk7XG5cdFx0Ly8gRE9NcmVhZHkoKCkgPT4ge1xuXHRcdC8vXG5cdFx0Ly8gfSk7XG5cdH1cblxuXG5cdC8qKlxuXHQgKiBTZXRzIHVwIG1vZGFsIGxpbmtzXG5cdCAqL1xuXHRmdW5jdGlvbiBpbml0TW9kYWxMaW5rcygpIHtcblx0XHRjb25zdCBtb2RhbDogSFRNTEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwnKSBhcyBIVE1MRWxlbWVudDtcblxuXHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcblx0XHRcdGNvbnN0IGVsZW1lbnQ6IEhUTUxFbGVtZW50ID0gZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG5cblx0XHRcdGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZSgncmVsJykgPT09ICdtb2RhbCcpIHtcblx0XHRcdFx0Y29uc3QgdGFyZ2V0Q29udGVudDogSFRNTEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXNlY3Rpb24nKSkgYXMgSFRNTEVsZW1lbnQ7XG5cblx0XHRcdFx0bW9kYWwuY2xhc3NMaXN0LmFkZCgnbW9kYWwtLWFjdGl2ZScpO1xuXHRcdFx0XHRtb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2lubmVyJykuaW5uZXJIVE1MID0gdGFyZ2V0Q29udGVudC5pbm5lckhUTUw7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWxfX2Nsb3NlJykpIHtcblx0XHRcdFx0Ly8gQ2xvc2UgdGhlIG1vZGFsXG5cdFx0XHRcdG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoJ21vZGFsLS1hY3RpdmUnKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdGZ1bmN0aW9uIGluaXROYXZMaW5rcygpIHtcblx0XHQkKCcuaGF2ZS15b3VyLXNheScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuXHRcdFx0c2Nyb2xsVG9UYXJnZXQoJ3NlY3Rpb24uY29udGFjdCcpO1xuXHRcdH0pO1xuXHR9XG5cblxuXHQvKipcblx0ICogQXR0YWNoIHN0aWNreSBoZWFkZXIgYmVoYXZpb3VyXG5cdCAqL1xuXHRmdW5jdGlvbiBzdGlja3lIZWFkZXIoKSB7XG5cdFx0Y29uc3Qgc2hvcnRoYW5kOiBIVE1MRWxlbWVudCA9IGVsZW1lbnRzLmhlYWRlci5jbG9uZU5vZGUodHJ1ZSkgYXMgSFRNTEVsZW1lbnQ7XG5cdFx0Y29uc3QgY29udGFpbmVyT2Zmc2V0ID0gZWxlbWVudHMuY29udGFpbmVyLm9mZnNldFRvcDtcblxuXHRcdC8vIENsb25lIG91ciBoZWFkZXIgZm9yIGZpeGVkIHRvcCBiYXIgd2hlbiBzY3JvbGxpbmcgZG93biBwYWdlXG5cdFx0c2hvcnRoYW5kLmNsYXNzTGlzdC5hZGQoJ3Nob3J0aGFuZCcpO1xuXHRcdGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2hvcnRoYW5kKTtcblxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCAoKSA9PiB7XG5cdFx0XHRjb25zdCBzY3JvbGxUb3AgPSBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDtcblxuXHRcdFx0aWYgKGNvbnRhaW5lck9mZnNldCA8IHNjcm9sbFRvcCAmJiAhZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuY29udGFpbnMoJ3N0aWNreScpKSB7XG5cdFx0XHRcdGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnc3RpY2t5Jyk7XG5cdFx0XHR9IGVsc2UgaWYgKGNvbnRhaW5lck9mZnNldCA+PSBzY3JvbGxUb3ApIHtcblx0XHRcdFx0ZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdzdGlja3knKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cblx0LyoqXG5cdCAqIEF0dGFjaCB0YXJnZXQgYXR0cmlidXRlIHRvIGxpbmtzIGRlc2lnbmF0ZWQgYXMgZXh0ZXJuYWwuXG5cdCAqL1xuXHRmdW5jdGlvbiBleHRlcm5hbExpbmtzKCkge1xuXHRcdGNvbnN0IGxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYVtyZWw9XCJleHRlcm5hbFwiXScpO1xuXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBsaW5rcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0bGlua3NbaV0uc2V0QXR0cmlidXRlKCd0YXJnZXQnLCAnX2JsYW5rJyk7XG5cdFx0fVxuXHR9XG5cblxuXHQvKipcblx0ICogQW5pbWF0ZSBzY3JvbGxzIHRvIHRoZSB0YXJnZXRcblx0ICogQHBhcmFtIHtvYmplY3R9IHRhcmdldCBBIHF1ZXJ5IHNlbGVjdG9yIG9yIGpRdWVyeSBvYmplY3QgZm9yIHRvIHNjcm9sbCB0b1xuXHQgKi9cblx0ZnVuY3Rpb24gc2Nyb2xsVG9UYXJnZXQodGFyZ2V0LCBvZmZzZXQgPSAwLCBjYWxsYmFjaz8pIHtcblx0XHR0YXJnZXQgPSAodHlwZW9mIHRhcmdldCA9PT0gJ3N0cmluZycpID8gJCh0YXJnZXQpIDogdGFyZ2V0O1xuXG5cdFx0Ly8gSWYgd2UgYXJlIG9uIHNtYWxsZXIgYnJlYWtwb2ludCB3aXRoIG92ZXJsYXkgaGVhZGVyIHRoZW4gZGVjcmVhc2UgdGhlIG9mZnNldCBieSBhIGJpdFxuXHRcdGlmICgkKCdoZWFkZXIuc2hvcnRoYW5kJykuY3NzKCdiYWNrZ3JvdW5kJykgIT09ICd0cmFuc3BhcmVudCcpIHtcblx0XHRcdG9mZnNldCAtPSA1MDtcblx0XHR9XG5cblx0XHRjb25zdCBzY3JvbGxhYmxlID0gJCgnYm9keScpO1xuXHRcdGNvbnN0IHBvc2l0aW9uID0gJCh0YXJnZXQpLm9mZnNldCgpLnRvcCArIChvZmZzZXQgfHwgMCk7XG5cblx0XHRzY3JvbGxhYmxlLnN0b3AoKS5hbmltYXRlKHsgc2Nyb2xsVG9wOiBwb3NpdGlvbiB9LCA0MDAsICgpID0+IHtcblx0XHRcdGlmIChjYWxsYmFjayAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cblxuXG5cdC8qKlxuXHQgKiBCaW5kcyBhIGZ1bmN0aW9uIHRvIERPTUNvbnRlbnRMb2FkZWRcblx0ICogQHBhcmFtICBmbiB3aGVuIERPTSBjb250ZW50IGlzIGxvYWRlZFxuXHQgKi9cblx0ZnVuY3Rpb24gRE9NcmVhZHkoZm46ICgpID0+IGFueSwgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQpIHtcblx0XHRpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7IHJldHVybjsgfVxuXG5cdFx0aWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdjb21wbGV0ZScgfHwgKGRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICdsb2FkaW5nJyAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Wydkb1Njcm9sbCddKSkge1xuXHRcdFx0d2luZG93LnNldFRpbWVvdXQoZm4oKSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG5cdFx0XHRcdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdsb2FkJywgZm4pO1xuXHRcdFx0XHRmbigpO1xuXHRcdFx0fSk7XG5cblx0XHRcdC8vIEZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWRcblx0XHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZm4gYXMgRXZlbnRMaXN0ZW5lcik7XG5cdFx0fVxuXHR9XG5cblxuXHQvLyBHbyFcblx0aW5pdCgpO1xufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
